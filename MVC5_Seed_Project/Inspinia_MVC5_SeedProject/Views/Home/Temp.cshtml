<div id="AccountViewModel">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#inputEmail">
        Input Email
    </button>
    <div class="modal inmodal fade" id="inputEmail" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content animated ">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <i class="fa fa-laptop modal-icon"></i>
                    <h4 class="modal-title">Welcome to logo.com</h4>
                    <small class="font-bold">Trusted website for buying and selling</small>
                </div>
                <div class="modal-body">
                    <div class="form-group"><label>Enter Email</label> <input type="email" data-bind="value:email,valueUpdate:'afterkeydown',event:{keyup:checkEnterEmail}" placeholder="Enter your email" class="form-control"></div>
                    <p data-bind="text:error"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                    <button type="button" data-bind="click:submitEmail" class="btn btn-primary">Submit</button>
                </div>
            </div>

        </div>
    </div>
    <div class="modal inmodal fade" id="newUser" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content animated ">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <i class="fa fa-laptop modal-icon"></i>
                    <h4 class="modal-title">Welcome to logo.com</h4>
                    <small class="font-bold">Trusted website for buying and selling</small>
                </div>
                <div class="modal-body">
                    <div class="form-group"><label>Enter Password</label> <input type="password" data-bind="value:password,valueUpdate:'afterkeydown',event:{keyup:checkEnterNewPassword}" placeholder="Enter Password" class="form-control"></div>
                    <div class="form-group"><label>Confirm Password</label> <input type="password" data-bind="value:confirmPassword,hasFocus:hasConfirmPasswordFocus,valueUpdate:'afterkeydown',event:{keyup:checkEnterConfirmPassword}" placeholder="Again Enter your Password" class="form-control"></div>
                    <p data-bind="text:error"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-bind="click:registerOnEmail" >Do it later</button>
                    <button type="button" data-bind="click:registerNewUser" class="btn btn-primary">Submit</button>
                </div>

            </div>
        </div>
    </div>
    <div class="modal inmodal fade" id="inputName" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content animated ">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <i class="fa fa-laptop modal-icon"></i>
                    <h4 class="modal-title">Thank You for joining Logo.com !</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group"><label>Your good name please</label> <input type="text" data-bind="value:UserName,valueUpdate:'afterkeydown',event:{keyup:checkEnterName}" placeholder="Enter your Name" class="form-control"></div>
                    <p data-bind="text:error"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                    <button type="button" data-bind="click:submitName" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal inmodal fade" id="oldUser" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content animated ">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <i class="fa fa-laptop modal-icon"></i>
                    <h4 class="modal-title">Welcome Back <span data-bind="text:UserName"></span> !</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group"><label><span data-bind="visible:!isPasswordSaved()">Create </span> <span data-bind="visible:isPasswordSaved()">Enter </span>  password</label> <input type="password" data-bind="value:password,valueUpdate:'afterkeydown',event:{keyup:checkEnterPassword}" placeholder="Enter your Password" class="form-control"></div>
                    <p data-bind="text:error"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                    <button type="button" data-bind="click:checkLoginUserPassword" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/timeago")
    @Scripts.Render("~/plugins/autosize")
    @Scripts.Render("~/plugins/knockout")
<script>
    function isValidEmailAddress(emailAddress) {
        var pattern = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        return pattern.test(emailAddress);
    };
    function AccountViewModel() {
        var self = this;
        self.email = ko.observable();
        self.password = ko.observable();
        self.UserName = ko.observable();
        self.confirmPassword = ko.observable();
        self.error = ko.observable("");
        self.isPasswordSaved = ko.observable(true);
        self.checkEnterEmail = function (d, e) {
            if (e.keyCode == 13) {
                self.submitEmail();
            }
        }
        self.hasConfirmPasswordFocus = ko.observable(false);
        self.checkEnterNewPassword = function (d, e) {
            if (e.keyCode == 13) {
                self.hasConfirmPasswordFocus(true);
            }
        }
        self.checkEnterConfirmPassword = function (d, e) {
            if (e.keyCode == 13) {
                self.registerNewUser();
            }
        }
        self.checkEnterName = function (d, e) {
            if (e.keyCode == 13) {
                self.submitName();
            }
        }
        self.checkEnterPassword = function (d, e) {
            if (e.keyCode == 13) {
                self.checkLoginUserPassword();
            }
        }
        self.registerOnEmail = function () {
            self.error("");
            $.ajax({
                url: '/Account/RegisterUser?email=' + self.email(),
                dataType: "json",
                contentType: "application/json",
                cache: false,
                type: 'POST',
                success: function (data) {
                    if (data == "Done") {
                        location.reload();
                    } else {
                        self.error("Some Error has occured.Please try again");
                    }
                },
                error: function () {
                    self.error("failed to register. Please refresh page and try again", "Error!");
                }
            });
        }
        self.submitEmail = function () {
            if(isValidEmailAddress(self.email())){
                $.ajax({
                    url: '/api/User/CheckEmail?email=' + self.email(),
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    success: function (data) {
                        $("#inputEmail").modal('hide');
                        if (data == "NewUser") {
                            $("#newUser").modal('show');
                        } else {
                            self.isPasswordSaved(data.isPasswordSaved);
                            $("#oldUser").modal('show');
                            self.UserName(data.name);
                        }
                        self.error("");
                    },
                    error: function () {
                        self.error("failed to send Email. Please refresh page and try again", "Error!");
                    }
                });
            }else{
                self.error("Please enter a valid email address");
            }
        }
        self.checkLoginUserPassword = function () {
            self.error("");
            $.ajax({
                url: '/Account/UserLogin?email='+self.email() + '&password=' + self.password(),
                dataType: "json",
                contentType: "application/json",
                cache: false,
                type: 'POST',
                success: function (data) {
                    if (data == "Done") {
                        self.error("");
                        
                        location.reload();
                    } else {
                        self.error("Incorrect password. Forget Password?");
                    }
                },
                error: function () {
                    self.error("failed to send password. Please refresh page and try again", "Error!");
                }
            });
        }
        self.registerNewUser = function () {
            self.error("");
            if (self.password() === self.confirmPassword()) {
                $.ajax({
                    url: '/Account/RegisterUser?email=' + self.email() + '&password=' + self.password(),
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    success: function (data) {
                        if (data == "Done") {
                            self.error("");
                            $("#newUser").modal('hide');
                            $("#inputName").modal('show');
                        } else {
                            self.error("Some error has occured");
                        }
                    },
                    error: function () {
                        self.error("failed to send password. Please refresh page and try again", "Error!");
                    }
                });
            }
            else {
                self.error("password does not match");
            }
        }
        self.submitName = function () {
            self.error("");
            self.UserName($.trim(self.UserName()));
            if (self.UserName()) {
                $.ajax({
                    url: '/Account/SubmitName?name=' + self.UserName(),
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    success: function (data) {
                        if (data == "Done") {
                            location.reload();
                        } else {
                            self.error("Some error has occured");
                        }
                    },
                    error: function () {
                        self.error("failed to send Name. Please refresh page and try again", "Error!");
                    }
                });
            }
            else {
                self.error("Please enter valid name");
            }
        }
    }
    $(function () {
        ko.applyBindings(new AccountViewModel());
    })
</script>
}