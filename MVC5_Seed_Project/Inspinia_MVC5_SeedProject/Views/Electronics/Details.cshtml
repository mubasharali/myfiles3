@{
    ViewBag.Title = "Details";
}
<input type="hidden" id="adId" value="@ViewBag.adId" />
<input type="hidden" id="currentPage" value="@HttpContext.Current.Request.Url.AbsolutePath" />
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Details</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Details</strong>
            </li>
        </ol>
    </div>
</div>




<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        <div class="col-sm-3">@Html.Partial("~/Views/Shared/_Tree.cshtml")</div>
        <div class="col-md-9" id="adsBinding">
            <div data-bind="foreach: showAds">
                <div data-bind="attr:{'id':id}">
                    <div class="ibox product-detail">
                        <div class="ibox-content">

                            <div class="row">
                                <div data-bind="foreach: showImages">
                                    <div class="col-md-5">


                                        <div class="product-images">

                                            <div>
                                                <div class="image-imitation">
                                                    [IMAGE 1]
                                                </div>
                                            </div>
                                            <div>
                                                <div class="image-imitation">
                                                    [IMAGE 2]
                                                </div>
                                            </div>
                                            <div>
                                                <div class="image-imitation">
                                                    [IMAGE 3]
                                                </div>
                                            </div>


                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <a data-bind="click: function(){return deleteAd(id)}" class="btn btn-white btn-xs pull-right confirmDelete"> Delete</a><a href="#" class="btn btn-white btn-xs pull-right"> Edit</a>
                                    <h2 data-bind="text:title" class="font-bold m-b-xs"></h2>
                                    <hr>
                                    <span data-bind="if:isBidingAllowed">
                                        <button data-bind="click:placeBidButton" class="btn btn-primary pull-right">Place Bid</button>
                                    </span>
                                    <span data-bind="if:!isBidingAllowed">
                                        <button data-bind="" class="btn btn-primary pull-right">Chat with seller</button>
                                    </span>
                                        <h1 class="product-main-price">
                                            <span data-bind="if:!isBidingAllowed">
                                                <span data-bind="if:price">
                                                     <span data-bind="text:price"></span> <small style="font-size:13px" class="text-muted"  >Rs. <span data-bind="html:isNegotiable"></span></small>
                                                </span>
                                                <span data-bind="if:!price">Price on contact</span>
                                            </span>
                                            <span data-bind="if:isBidingAllowed">
                                                <span data-bind="if:price">
                                                    
                                                    @*<span data-bind="text:highestBid()"></span>
                                                    <span data-bind="text:price"></span> //*@
                                                    <span data-bind="if:highestBid() == '-Infinity'">
                                                        <span data-bind="text:price"></span> <small style="font-size:13px" class="text-muted ">Rs. (Initial Bid) </small>
                                                    </span>
                                                    <span data-bind="ifnot:highestBid() == '-Infinity'">
                                                        <span data-bind="text:highestBid"></span> <small style="font-size:13px" class="text-muted ">Rs. (current Bid) </small>
                                                    </span>
                                                </span>
                                                <span data-bind="if:!price">
                                                    <span data-bind="if:highestBid() == '-Infinity'">
                                                        No Bit yet
                                                    </span>
                                                    <span data-bind="ifnot:highestBid() == '-Infinity'">
                                                        <span data-bind="text:highestBid"></span> <small style="font-size:13px" class="text-muted ">Rs. (current Bid) </small>
                                                    </span>
                                                </span>
                                            </span>
                                        </h1>
                                    <div data-bind="foreach: showMobileAd">
                                        <hr>
                                        <dl class="dl-horizontal m-t-md small">
                                            <dt>Brand:</dt>
                                            <dd data-bind="text:brand"></dd>
                                            <dt>Model:</dt>
                                            <dd data-bind="text:model"></dd>
                                            <dt>color:</dt>
                                            <dd data-bind="text:color"></dd>
                                            <dt>condition:</dt>
                                            <dd data-bind="text:condition"></dd>
                                            <span data-bind="if:sims">
                                                <dt>Number of sims:</dt>
                                                <dd data-bind="text:sims"></dd>
                                            </span>
                                        </dl>
                                    </div>
                                    <div data-bind="foreach: showCarAd">
                                        <hr>
                                        <dl class="dl-horizontal m-t-md small">
                                            <dt>Brand:</dt>
                                            <dd data-bind="text:brand"></dd>
                                            <dt>Model:</dt>
                                            <dd data-bind="text:model"></dd>
                                            <dt>color:</dt>
                                            <dd data-bind="text:color"></dd>
                                            <dt>condition:</dt>
                                            <dd data-bind="text:condition"></dd>
                                            <dt>Fuel type</dt>
                                            <dd data-bind="text:fuelType"></dd>
                                            <dt>Km Driven</dt>
                                            <dd data-bind="text:kmDriven"></dd>
                                            <dt>Year</dt>
                                            <dd data-bind="text:year"></dd>
                                        </dl>
                                    </div>
                                    <h4>Product description</h4>

                                    <div data-bind="text:description" class="small text-muted">
                                    </div>

                                    <div class="text-right">
                                        <div class="btn-group">
                                            <button class="btn btn-white btn-sm"><i class="fa fa-star"></i> Add to wishlist </button>
                                            <a data-bind="click:sellerProfile" class="btn btn-white btn-sm"><i class="fa fa-user"></i> Seller profile</a>
                                        </div>
                                    </div>


                                </div>
                            </div>

                        </div>
                        <div class="ibox-footer">
                            <span class="pull-right">
                                <i class="fa fa-clock-o"></i> <span data-bind="text:time"></span>
                            </span>
                            Views (<span data-bind="text:views"></span>) -  wishlist (34) - <span data-bind="click: function(){ return report(id,loginUserId)}"><span data-bind="style:{color: isReported()? 'red' : 'gray'}"> <i class="fa fa-flag"></i> </span> Report </span>(<span data-bind="text:reportedCount()"></span>)
                            
                            
                            <div data-bind="visible:isBidingAllowed">
                                <hr />
                                <h2>Bidings:</h2>
                                <div data-bind="visible:placeBid">
                                    <div class="form-group">
                                        <div class="row">
                                            <label class="control-label col-sm-2">Bid amount</label>
                                            <div class="col-sm-8">
                                                <div class="input-group m-b">
                                                    <span class="input-group-addon">Rs</span><input type="number" placeholder="place bid.." data-bind="value:newBidPrice" class="form-control" pattern="[0-9]*" name="price" required />
                                                </div>
                                            </div>
                                            <div class="col-sm-2"><button class="btn btn-success" data-bind="click:postBid">Submit</button></div>
                                        </div>
                                    </div>
                                    @*Bid Amount:<input type="number" data-bind="value:newBidPrice" />*@
                                    
                                </div>
                                <span data-bind="text:showBidings().length"></span> bidings
                                    <ul class="sortable-list connectList agile-list" data-bind="foreach:showBidings">
                                        <li class="success-element">
                                            <span data-bind="visible:!isEditing()">
                                                <a href="#"><span data-bind="text:postedByName"></span></a>
                                                <span data-bind="text:price"></span>
                                                <div class="agile-detail">
                                                    <a data-bind="click:$parent.deleteBid" class="pull-right btn btn-xs btn-white">delete</a><a data-bind="click:editBidButton" class="pull-right btn btn-xs btn-white">edit</a>
                                                    <i class="fa fa-clock-o"></i> <span data-bind="text:time"></span>
                                                </div>
                                            </span>
                                            <span data-bind="visible:isEditing()">
                                                <div class="input-group m-b">
                                                    <span class="input-group-addon">Rs</span><input type="number" data-bind="value:price" class="form-control" pattern="[0-9]*" name="price" required />
                                                </div>
                                                <button class="btn btn-success" data-bind="click:function(){return updateBid($parent.id)}">Update</button>
                                            </span>
                                        </li>
                                    </ul>
                                
                            </div>
                        </div>
                            <div class="">
                                @Html.Partial("~/Views/Shared/_Comments.cshtml")
                            </div>
</div>
                </div>
            </div>
                    </div>
<div class="col-md-3">
    @*<div class="wrapper wrapper-content project-manager">
            <h4>Project description</h4>
            <img src="~/Images/zender_logo.png" class="img-responsive">
            <p class="small">
                There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look
                even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing
            </p>
            <p class="small font-bold">
                <span><i class="fa fa-circle text-warning"></i> High priority</span>
            </p>
            <h5>Project tag</h5>
            <ul class="tag-list" style="padding: 0">
                <li><a href=""><i class="fa fa-tag"></i> Zender</a></li>
                <li><a href=""><i class="fa fa-tag"></i> Lorem ipsum</a></li>
                <li><a href=""><i class="fa fa-tag"></i> Passages</a></li>
                <li><a href=""><i class="fa fa-tag"></i> Variations</a></li>
            </ul>
            <h5>Project files</h5>
            <ul class="list-unstyled project-files">
                <li><a href=""><i class="fa fa-file"></i> Project_document.docx</a></li>
                <li><a href=""><i class="fa fa-file-picture-o"></i> Logo_zender_company.jpg</a></li>
                <li><a href=""><i class="fa fa-stack-exchange"></i> Email_from_Alex.mln</a></li>
                <li><a href=""><i class="fa fa-file"></i> Contract_20_11_2014.docx</a></li>
            </ul>
            <div class="text-center m-t-md">
                <a href="#" class="btn btn-xs btn-primary">Add files</a>
                <a href="#" class="btn btn-xs btn-primary">Report contact</a>

            </div>
        </div>*@
</div>

    </div>
@*start*@
<div class="row">
    <div class="col-lg-12">



    </div>
</div>
        </div>



@section Styles {
    @Styles.Render("~/plugins/slickStyles")
    @Styles.Render("~/plugins/slickThemeStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/Content/plugins/jsTree")
@Styles.Render("~/plugins/sweetAlertStyles")
}


@section Scripts{
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/timeago")
    @Scripts.Render("~/plugins/autosize")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/plugins/slick")
    @Scripts.Render("~/plugins/jsTree")
    @Scripts.Render("~/bundles/categoryTree")
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/plugins/sweetAlert")
<script src="~/Scripts/_Comments.js"></script>
    <script>
        function Biding(data) {
            var self = this;
            data = data || {};
            self.postedById = data.postedById;
            self.postedByName = data.postedByName;
            self.exectTime = data.time;
            self.time = getTimeAgo(data.time);
            self.id = data.id;
            self.price = ko.observable( data.price);
            self.isEditing = ko.observable(false);
            self.editBidButton = function () {
                self.isEditing(true);
            }
            self.updateBid = function (adId) {
                self.time = self.exectTime;
                self.postedBy = self.postedById;
                self.adId = adId;
                $.ajax({
                    url: '/api/Electronic/UpdateBid',
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    data: ko.toJSON(self),
                    success: function (data) {
                        self.isEditing(false);
                    },
                    error: function () {
                        toastr.error("failed to update comment", "Error!");
                    }
                });
            }
        }
        function CarAd(data) {
            var self = this;
            data = data || {};
            self.fuelType = data.fuelType;
            self.year = data.year;
            if (data.condition == "n") {
                self.condition = "New";
            } else if (data.condition == "u") {
                self.condition = "Used";
            } else if (data.condition == "b") {
                self.condition = "unBoxed";
            }
            self.color = data.color;
            self.brand = data.brand;
            self.model = data.model;
            self.kmDriven = data.kmDriven;
        }
        function mobilead(data) {
            var self = this;
            data = data || {};
            self.color = data.color;
            self.condition = "";
            if (data.condition == "n") {
                self.condition = "New";
            } else if (data.condition == "u") {
                self.condition = "Used";
            } else if (data.condition == "b") {
                self.condition = "unBoxed";
            }
            self.sims = data.sims;
            self.brand = data.brand;
            self.model = data.model;
        }
        
        function adImages(data) {
            var self = this;
            data = data || {};
            self.id = data.id;
            self.name = data.adId + '_' + data.imageExtension;// also loop after _
        }
        function ad(data) {
            var self = this;
            data = data || {};
            self.title = data.title;
            self.description = ko.observable( data.description);
            self.postedByName = data.postedByName;
            self.postedById = data.postedById;
            self.id = data.id;
            self.time = getTimeAgo(data.time);
            self.loginUserId = data.islogin || "";
            self.showMobileAd = ko.observableArray();
            self.showComment = ko.observableArray();
            self.isReported = ko.observable(data.isReported);
            self.reportedCount = ko.observable(data.reportedCount);
            self.showImages = ko.observable();
            self.views = data.views;
            self.price = data.price || "";
            self.newBidPrice = ko.observable();
            self.showCarAd = ko.observable();
            //biding
            self.highestBid = ko.observable();
            self.showBidings = ko.observableArray();
            self.isBidingAllowed = false;
            self.placeBid = ko.observable(false);
            self.bidAmount = ko.observable();
            self.sellerProfile = function () {
                window.location.href = "/User/Index/" + self.postedById;
            }
            self.placeBidButton = function () {
                if(self.loginUserId){
                    self.placeBid(true);
                } else {
                    toastr.info("You must login to place bid!");
                }
            }
            
            self.deleteBid = function (bid) {
                $.ajax({
                    url: '/api/Electronic/DeleteBid/' + bid.id,
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    success: function (data) {
                        self.showBidings.remove(bid);
                    },
                    error: function () {
                        toastr.error("failed to delete bid. Please refresh page and try again", "Error!");
                    }
                });
            }
            self.postBid = function () {
                var bid = new Biding();
                bid.adId = self.id;
                bid.price = self.newBidPrice();
                bid.time = new Date($.now());
                $.ajax({
                    url: '/api/Electronic/PostBid',
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    data: ko.toJSON(bid),
                    success: function (data) {
                        self.showBidings.push(new Biding(data));
                        self.highestBid ( Math.max.apply(Math, self.showBidings().map(function (o) { return o.price(); })));
                        self.newBidPrice('');
                        $(".sortable-list").sortable({
                            connectWith: ".connectList"
                        }).disableSelection();
                    },
                    error: function () {
                        toastr.error("failed to delete Ad. Please refresh page and try again", "Error!");
                    }
                });
            }
            if (data.isNegotiable == "b") {
                self.isBidingAllowed = true;
            } else if (data.isNegotiable == "y") {
                self.isNegotiable = 'Negotiable';
            } else if (data.isNegotiable == "n") {
                self.isNegotiable = '<strike>Negotiable</strike>';
            }
            if(self.price == "") {
                self.isNegotiable = "";
            }
            if (data.bid) {
                var biding = $.map(data.bid, function (item) { return new Biding(item); });
                self.highestBid ( Math.max.apply(Math, biding.map(function (o) { return o.price(); })));
                self.showBidings(biding);
            }
            if (data.carad) {
                var mobad = $.map(data.carad, function (item) { return new CarAd(item); });
                self.showCarAd(mobad);
            }
            else if (data.laptopad) {
                var mobad = $.map(data.laptopad, function (item) { return new mobilead(item); });
                self.showMobileAd(mobad);
            }
            else if (data.mobilead) {
                var mobad = $.map(data.mobilead, function (item) { return new mobilead(item); });
                self.showMobileAd(mobad);
            }
            if (data.comment) {
                var cmt = $.map(data.comment, function (item) { return new comment(item); });
                self.showComment(cmt);
            }
            if (data.image) {
                var img = $.map(data.image, function (item) { return new adImages(item); });
                self.showImages(img);
            }
            self.deleteAd = function (id) {
                    swal({
                        title: "Are you sure?",
                        text: "You will not be able to recover this Ad!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, delete it!",
                        closeOnConfirm: false
                    }, function () {
                        $.ajax({
                            url: '/api/Electronic/DeleteAd/' + id,
                            dataType: "json",
                            contentType: "application/json",
                            cache: false,
                            type: 'POST',
                            success: function (data) {
                                swal("Deleted!", "Your Ad has been deleted.", "success");
                                alert("ok");
                                window.location.href = "/User/Index/"+self.loginUserId;
                            },
                            error: function () {
                                toastr.error("failed to delete Ad. Please refresh page and try again", "Error!");
                            }
                        });
                    });
            }
            self.deleteComment = function (id) {
                $.ajax({
                    url: '/api/Comment/DeleteComment/' + id,
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    // data: ko.toJSON(id),
                    success: function (data) {
                        self.showComment.remove(function (item) {
                            return item.id == id;
                        });
                    },
                    error: function () {
                        toastr.error("failed to delete comment", "Error!");
                    }
                });
            }
            self.report = function (id, loginUserId) {
                if (loginUserId) {
                    $.ajax({
                        url: '/api/Electronic/reportAd?id=' + id,
                        dataType: "json",
                        contentType: "application/json",
                        cache: false,
                        type: 'POST',
                        success: function (data) {
                            self.isReported(true);
                            self.reportedCount(data);
                        },
                        error: function (xhr, status, error) {
                            var err = eval("(" + xhr.responseText + ")");
                            toastr.info(err.Message);
                        }
                    })
                } else {
                    toastr.info("You must be login to report this ad", "Na na!");
                }
            }
            self.checkEnter = function (d, e) {
                if (e.keyCode == 13) {
                    self.addcomment();
                }
            }

            self.newComment = ko.observable();
            self.addcomment = function () {
                if (self.loginUserId) {
                    var com = new comment();
                    com.adId = self.id;
                    com.description (self.newComment());
                    com.description(com.description().slice(0, -1));
                    if (com.description) {
                        com.time = new Date($.now());
                        $.ajax({
                            url: '/api/Comment/PostComment',
                            dataType: "json",
                            contentType: "application/json",
                            cache: false,
                            type: 'POST',
                            data: ko.toJSON(com),
                            success: function (data) {
                                self.showComment.push(new comment(data));
                                self.newComment('');
                            },
                            error: function (jqXHR, status, thrownError) {
                                toastr.error("failed to post comment", "Error");
                            }
                        });
                    }
                } else {
                    var currentPage = $("#currentPage").val();
                    toastr.options.onclick = function () { window.location.href = '/Account/Login?returnUrl=' + currentPage }
                    toastr.info("You must be login to post comment", "Oops!");
                }
            }
        }

        function viewModel() {
            var self = this;
            self.showAds = ko.observableArray();
            self.loadad = function () {
                var adId = $("#adId").val();
                url_address = '/api/Electronic/GetAd/' + adId;
                $.ajax({
                    url: url_address,
                    dataType: "json",
                    type: 'GET'
                })
                .done(function (data) {
                    var mappedads = $.map(data, function (item) { return new ad(item); });
                    self.showAds(mappedads);
                    $(".sortable-list").sortable({
                        connectWith: ".connectList"
                    }).disableSelection();
                })
                .fail(function () {
                    toastr.error("Unable to load data. Please try again", "Error");
                });
                
            }

            self.loadad();
            return self;
        }
        function getTimeAgo(varDate) {
            if (varDate) {
                return $.timeago(varDate.toString().slice(-1) == 'Z' ? varDate : varDate + 'Z');
            }
            else {
                return '';
            }
        }
        ko.bindingHandlers.jqAutoresize = {
            init: function (element, valueAccessor, aBA, vm) {
                if (!$(element).hasClass('msgTextArea')) {
                    $(element).css('height', '1em');
                }
                $(element).autosize();
            }
        };
        
        $(function () {
            
            toastr.options = {
                closeButton: true,
                progressBar: true,
                preventDuplicates: true,
                positionClass: 'toast-top-right',
                onclick: null
            };
            $('.product-images').slick({
                dots: true
            });
            ko.applyBindings(new viewModel, (document.getElementById('adsBinding')));

            ko.applyBindings(new treeModel, document.getElementById('navigation'));
           
            
        });

    </script>
}
