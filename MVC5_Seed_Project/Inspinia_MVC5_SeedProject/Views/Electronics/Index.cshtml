@model IEnumerable<Inspinia_MVC5_SeedProject.Models.Ad>

@{
    ViewBag.Title = "Index";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Index</h2>
        <ol class="breadcrumb">
            <li class="active">
                <strong>Ad</strong>
            </li>
        </ol>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-sm-3">
                        @Html.Partial("~/Views/Shared/_Tree.cshtml")
        </div>
        <div class="col-sm-6">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>List of Ad</h5>
					<div class="ibox-tools">
                        <a href="/">click here</a>
						@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary btn-xs" })
					</div>
                </div>
                <div class="ibox-content">

<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.time)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AspNetUser.Email)
        </th>
        <th></th>
    </tr>


}

</table>

                </div>
            </div>
        </div>
        <div class="col-sm-3">
        
        </div>
    </div>
 </div>

@section Styles {
    @Styles.Render("~/Content/plugins/jsTree")
}

@section Scripts {
    @Scripts.Render("~/plugins/jsTree")
    @Scripts.Render("~/plugins/knockout")

    <script>
        function Model(data) {
            var self = this;
            data = data || {};
            self.modelName = data.model;
        }
        function Company(data) {
            var self = this;
            data = data || {};
            self.companyName = data.companyName;
            self.showModels = ko.observableArray();
            if (data.models) {
                var models = $.map(data.models, function (item) { return new Model(item) });
                self.showModels(models);
            }
        }
        function treeModel() {
            var self = this;
            self.showCompanies = ko.observableArray();
            self.loadTree = function () {
                $.ajax({
                    url: '/api/Electronic/GetMobileTree',
                    dataType: "json",
                    contentType: "application/json",
                    cache: false,
                    type: 'POST',
                    success: function (data) {
                        var dat = $.map(data, function (item) { return new Company(item) });
                        self.showCompanies(dat);

                        $("#navigation").jstree({
                            "themes": {
                                "theme": "classic"
                            },
                            "core": {
                                "themes": {
                                    "icons": false
                                }
                            },
                           // "plugins": ["themes", "html_data"],
                            "plugins": ["search"]
                        });
                        var to = false;
                        $('#treeSearch').keyup(function () {
                            if (to) { clearTimeout(to); }
                            to = setTimeout(function () {
                                var v = $('#treeSearch').val();
                                $('#navigation').jstree(true).search(v);
                            }, 250);
                        });
                    },
                    error: function (jqXHR, status, thrownError) {
                        toastr.error("failed to laod tree", "Error");
                    }
                });
            }
            self.loadTree();
        }
        $(function () {
            ko.applyBindings(new treeModel);
            //$('#jstree1').jstree({
            //    'core': {
            //        'check_callback': true
            //    }
            //});
        })
    </script>

}